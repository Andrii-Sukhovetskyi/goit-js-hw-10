{"version":3,"file":"commonHelpers.js","sources":["../src/js/1-timer.js"],"sourcesContent":["import flatpickr from \"flatpickr\";\nimport \"flatpickr/dist/flatpickr.min.css\";\nimport iziToast from \"izitoast\";\nimport \"izitoast/dist/css/iziToast.min.css\";\n\nlet userSelectedDate;\n\nconst options = {\n  enableTime: true,\n  time_24hr: true,\n  defaultDate: new Date(),\n  minuteIncrement: 1,\n  onClose(selectedDates) {\n    const selectedDate = selectedDates[0];\n    if (selectedDate <= new Date()) {\n      iziToast.error({\n        position: 'topRight',\n        message: 'Please choose a date in the future',\n      });\n      document.querySelector('.btn-start').disabled = true;\n    } else {\n      userSelectedDate = selectedDate;\n      document.querySelector('.btn-start').disabled = false;\n    }\n  },\n};\n\nconst input = document.querySelector('.input-data');\nflatpickr(input, options);\n\nconst startBtn = document.querySelector('[data-start]');\nconst daysEl = document.querySelector('[data-days]');\nconst hoursEl = document.querySelector('[data-hours]');\nconst minutesEl = document.querySelector('[data-minutes]');\nconst secondsEl = document.querySelector('[data-seconds]');\nlet timer;\n\nstartBtn.addEventListener('click', () => {\n  startBtn.disabled = true;\n  input.disabled = true;\n  startTimer(userSelectedDate);\n});\n\nfunction startTimer(endTime) {\n  timer = setInterval(() => {\n    const now = new Date().getTime();\n    const distance = endTime - now;\n\n    if (distance <= 0) {\n      clearInterval(timer);\n      input.disabled = false;\n      startBtn.disabled = true;\n      return;\n    }\n\n    const { days, hours, minutes, seconds } = convertMs(distance);\n\n    daysEl.textContent = addLeadingZero(days);\n    hoursEl.textContent = addLeadingZero(hours);\n    minutesEl.textContent = addLeadingZero(minutes);\n    secondsEl.textContent = addLeadingZero(seconds);\n  }, 1000);\n}\n\nfunction convertMs(ms) {\n  const second = 1000;\n  const minute = second * 60;\n  const hour = minute * 60;\n  const day = hour * 24;\n\n  const days = Math.floor(ms / day);\n  const hours = Math.floor((ms % day) / hour);\n  const minutes = Math.floor(((ms % day) % hour) / minute);\n  const seconds = Math.floor((((ms % day) % hour) % minute) / second);\n\n  return { days, hours, minutes, seconds };\n}\n\nfunction addLeadingZero(value) {\n  return String(value).padStart(2, '0');\n}\n\n// 1"],"names":["userSelectedDate","options","selectedDates","selectedDate","iziToast","input","flatpickr","startBtn","daysEl","hoursEl","minutesEl","secondsEl","timer","startTimer","endTime","now","distance","days","hours","minutes","seconds","convertMs","addLeadingZero","ms","value"],"mappings":"+IAKA,IAAIA,EAEJ,MAAMC,EAAU,CACd,WAAY,GACZ,UAAW,GACX,YAAa,IAAI,KACjB,gBAAiB,EACjB,QAAQC,EAAe,CACrB,MAAMC,EAAeD,EAAc,CAAC,EAChCC,GAAgB,IAAI,MACtBC,EAAS,MAAM,CACb,SAAU,WACV,QAAS,oCACjB,CAAO,EACD,SAAS,cAAc,YAAY,EAAE,SAAW,KAEhDJ,EAAmBG,EACnB,SAAS,cAAc,YAAY,EAAE,SAAW,GAEnD,CACH,EAEME,EAAQ,SAAS,cAAc,aAAa,EAClDC,EAAUD,EAAOJ,CAAO,EAExB,MAAMM,EAAW,SAAS,cAAc,cAAc,EAChDC,EAAS,SAAS,cAAc,aAAa,EAC7CC,EAAU,SAAS,cAAc,cAAc,EAC/CC,EAAY,SAAS,cAAc,gBAAgB,EACnDC,EAAY,SAAS,cAAc,gBAAgB,EACzD,IAAIC,EAEJL,EAAS,iBAAiB,QAAS,IAAM,CACvCA,EAAS,SAAW,GACpBF,EAAM,SAAW,GACjBQ,EAAWb,CAAgB,CAC7B,CAAC,EAED,SAASa,EAAWC,EAAS,CAC3BF,EAAQ,YAAY,IAAM,CACxB,MAAMG,EAAM,IAAI,KAAM,EAAC,QAAO,EACxBC,EAAWF,EAAUC,EAE3B,GAAIC,GAAY,EAAG,CACjB,cAAcJ,CAAK,EACnBP,EAAM,SAAW,GACjBE,EAAS,SAAW,GACpB,MACD,CAED,KAAM,CAAE,KAAAU,EAAM,MAAAC,EAAO,QAAAC,EAAS,QAAAC,GAAYC,EAAUL,CAAQ,EAE5DR,EAAO,YAAcc,EAAeL,CAAI,EACxCR,EAAQ,YAAca,EAAeJ,CAAK,EAC1CR,EAAU,YAAcY,EAAeH,CAAO,EAC9CR,EAAU,YAAcW,EAAeF,CAAO,CAC/C,EAAE,GAAI,CACT,CAEA,SAASC,EAAUE,EAAI,CAMrB,MAAMN,EAAO,KAAK,MAAMM,EAAK,KAAG,EAC1BL,EAAQ,KAAK,MAAOK,EAAK,MAAO,IAAI,EACpCJ,EAAU,KAAK,MAAQI,EAAK,MAAO,KAAQ,GAAM,EACjDH,EAAU,KAAK,MAASG,EAAK,MAAO,KAAQ,IAAU,GAAM,EAElE,MAAO,CAAE,KAAAN,EAAM,MAAAC,EAAO,QAAAC,EAAS,QAAAC,CAAO,CACxC,CAEA,SAASE,EAAeE,EAAO,CAC7B,OAAO,OAAOA,CAAK,EAAE,SAAS,EAAG,GAAG,CACtC"}